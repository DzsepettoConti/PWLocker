<Button x:Class="PWLocker.BaseButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:PWLocker"
        mc:Ignorable="d">
    <Button.Resources>
        <SolidColorBrush x:Key="PrimaryPurpleColor" Color="Purple"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="GhostWhite"/>
        <SolidColorBrush x:Key="ButtonMouseOverColor" Color="DarkBlue"/>
        <SolidColorBrush x:Key="ButtonPressedColor" Color="LightBlue"/>
        <SolidColorBrush x:Key="PrimaryDarkTextColor" Color="Black"/>

        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryPurpleColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontWeight" Value="500"/>
            <Setter Property="Padding" Value="12 6 12 6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MaxHeight" Value="100"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder" CornerRadius="5" 
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- MouseOver trigger -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonMouseOverColor}" />
                            </Trigger>

                            <!-- Click trigger -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonPressedColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SecondaryButtonStyle with MouseOver and Click triggers -->
        <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryPurpleColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkTextColor}"/>
            <Setter Property="FontWeight" Value="500"/>
            <Setter Property="Padding" Value="6 3 6 2"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="MaxHeight" Value="100"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder" CornerRadius="5" 
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- MouseOver trigger -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonMouseOverColor}" />
                            </Trigger>

                            <!-- Click trigger -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonPressedColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Resources>

    <Button.Style>
        <StaticResource ResourceKey="PrimaryButtonStyle"/>
    </Button.Style>
</Button>
